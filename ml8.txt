import matplotlib.pyplot as plt
import numpy as np
from sklearn.datasets import load_breast_cancer
from sklearn.tree import DecisionTreeClassifier, plot_tree
from sklearn.model_selection import train_test_split
from sklearn.metrics import accuracy_score

# Step 1: Load the breast cancer dataset
data = load_breast_cancer()
X = data.data
y = data.target

# Step 2: Split into training and test sets
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)

# Step 3: Train the Decision Tree classifier
clf = DecisionTreeClassifier(criterion='gini', random_state=42)
clf.fit(X_train, y_train)

# Step 4: Evaluate the classifier
y_pred = clf.predict(X_test)
accuracy = accuracy_score(y_test, y_pred)
print(f"Accuracy on test data: {accuracy*100:.2f}%")

# Step 5: Classify a new sample
new_sample = X_test[0].reshape(1, -1)
predicted_class = clf.predict(new_sample)[0]

print("Predicted class for the new sample:", data.target_names[predicted_class])
print("Actual class:", data.target_names[y_test[0]])

# Step 6: Visualize the Decision Tree
plt.figure(figsize=(20, 10))
plot_tree(clf, filled=True, feature_names=data.feature_names, class_names=data.target_names)
plt.title("Decision Tree for Breast Cancer Classification")
plt.show()